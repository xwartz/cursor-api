#!/usr/bin/env node
"use strict";var p=Object.create;var a=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var T=(o,e)=>{for(var n in e)a(o,n,{get:e[n],enumerable:!0})},g=(o,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of C(e))!w.call(o,r)&&r!==n&&a(o,r,{get:()=>e[r],enumerable:!(t=k(e,r))||t.enumerable});return o};var b=(o,e,n)=>(n=o!=null?p(I(o)):{},g(e||!o||!o.__esModule?a(n,"default",{value:o,enumerable:!0}):n,o)),$=o=>g(a({},"__esModule",{value:!0}),o);var S={};T(S,{getCursorTokenInfo:()=>h,getToken:()=>l,main:()=>d});module.exports=$(S);var m=require("fs"),s=require("path"),u=require("os"),f=b(require("better-sqlite3"));function x(){let o=(0,u.homedir)();switch(process.platform){case"win32":return(0,s.join)(process.env.APPDATA||(0,s.join)(o,"AppData","Roaming"),"Cursor");case"darwin":return(0,s.join)(o,"Library","Application Support","Cursor");case"linux":return(0,s.join)(process.env.XDG_CONFIG_HOME||(0,s.join)(o,".config"),"Cursor");default:throw new Error(`Unsupported platform: ${process.platform}`)}}function y(){let o=Math.floor(Date.now()/1e3/1e3),e=new Uint8Array([o>>8&255,o&255,o>>24&255,o>>16&255,o>>8&255,o&255]),n=165;for(let t=0;t<e.length;t++){let r=e[t];e[t]=(r^n)+t%256,n=e[t]}return Buffer.from(e).toString("base64")}function v(o){try{let e=new f.default(o,{readonly:!0}),n=e.prepare("SELECT value FROM ItemTable WHERE key = 'cursorAuth/accessToken'").get();if(e.close(),!n)throw new Error("Access token not found in database");return n.value.trim()}catch(e){throw new Error(`Failed to read access token: ${e}`)}}function E(o){try{let e=(0,m.readFileSync)(o,"utf8"),n=JSON.parse(e),t=n["telemetry.machineId"],r=n["telemetry.macMachineId"];if(!t||!r)throw new Error("Machine IDs not found in storage.json");return{machineId:t,macMachineId:r}}catch(e){throw new Error(`Failed to read device IDs: ${e}`)}}function A(o,e){return`${y()}${o}/${e}`}function h(){let o=x(),e=(0,s.join)(o,"User","globalStorage","state.vscdb"),n=(0,s.join)(o,"User","globalStorage","storage.json");console.log(`\u{1F4C1} Cursor data path: ${o}`),console.log(`\u{1F5C4}\uFE0F  Database path: ${e}`),console.log(`\u{1F4C4} Config file path: ${n}`);let t=v(e);console.log(`\u{1F511} Access Token: ${t.substring(0,20)}...`);let{machineId:r,macMachineId:c}=E(n);console.log(`\u{1F4BB} Machine ID: ${r}`),console.log(`\u{1F517} MAC Machine ID: ${c}`);let i=A(r,c);return console.log(`\u2705 Checksum: ${i}`),{token:t,checksum:i,machineId:r,macMachineId:c}}function D(o){return o.split(".").length!==3?(console.warn('\u26A0\uFE0F  Invalid token format. Expected 3 parts separated by "."'),!1):o.startsWith("ey")?!0:(console.warn('\u26A0\uFE0F  Token should start with "ey"'),!1)}function l(){try{console.log(`\u{1F680} Starting Cursor Token extraction...
`);let o=h();console.log(`
\u{1F4CB} Complete information:`),console.log("====================================="),console.log(`Token: ${o.token}`),console.log(`Checksum: ${o.checksum}`),console.log("====================================="),D(o.token)&&console.log("\u2705 Token format validation passed"),console.log(`
\u{1F4A1} Usage:`),console.log("Add the Token and Checksum to your tokens.json file"),console.log('Format: "token,checksum"'),console.log(`Example: "${o.token},${o.checksum}"`)}catch(o){console.error("\u274C Failed to get Token information:",o),process.exit(1)}}function M(){console.log(`Cursor CLI - Command-line tools collection
`),console.log("Usage:"),console.log("  cursor-cli [command]"),console.log(`
Commands:`),console.log("  token       Extract Cursor Token information"),console.log("  help        Show help information"),console.log(`
Examples:`),console.log("  cursor-cli token"),console.log("  cursor-cli help")}function d(){switch(process.argv.slice(2)[0]||"help"){case"token":l();break;case"help":M();break;default:l();break}}require.main===module&&d();0&&(module.exports={getCursorTokenInfo,getToken,main});
